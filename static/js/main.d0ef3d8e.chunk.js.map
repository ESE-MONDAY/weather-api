{"version":3,"sources":["menu.js","form.js","weather.js","forms.js","user.js","home.js","App.js","reportWebVitals.js","index.js"],"names":["Menu","navStyle","color","className","style","to","Form","placeholder","type","Weather","city","country","temp","temp_max","temp_min","description","lat","lon","icon","pressure","humidity","loadWeather","Math","floor","ceil","src","alt","onSubmit","name","value","User","useState","setCity","setCountry","setDescription","setTemp_min","setTemp_max","setTemp","setLat","setLon","setIcon","setPressure","setHumidity","getWeather","e","a","preventDefault","target","elements","axios","get","api_call","response","data","sys","main","weather","coord","console","log","home","App","basename","window","location","pathname","path","Component","exact","Home","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0ef3d8e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport {Link} from 'react-router-dom';\r\nimport './app.css'\r\n\r\nfunction Menu(){\r\n    const navStyle ={\r\n        color: 'black',\r\n        \r\n        \r\n    \r\n    }\r\n   return(\r\n    <div>\r\n        <nav>\r\n            <h3>Portfolio</h3>\r\n            <ul className='nav-links'>\r\n                <li><Link style= {navStyle} to=\"/\">Home</Link></li>\r\n                <li>  <Link style= {navStyle} to=\"/form\">About</Link></li>\r\n                <li> <Link style={navStyle} to=\"/user\">User</Link></li>\r\n            </ul>\r\n        </nav>\r\n    \r\n  \r\n   \r\n </div>\r\n   )\r\n}\r\n\r\n export default Menu;","import React from 'react';\r\n\r\nimport './form.css'\r\n\r\n\r\nfunction Form(){\r\n    return(\r\n        <div>\r\n             <header><h1>Subscribe</h1></header>\r\n     <h3>Sign up with your email address to recieve news and update</h3>\r\n     <form>\r\n       <input placeholder='First Name' type=\"text\" ></input>\r\n       <input placeholder='Last Name' type='text'></input>\r\n       <input placeholder='Email' type='text'></input>\r\n       \r\n       <input type='submit'></input>\r\n     </form>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Form;","import React from 'react';\r\nimport './form.css';\r\n\r\n\r\n\r\nconst Weather = \r\n    ({ \r\n        city, \r\n        country,\r\n        temp,\r\n        temp_max,\r\n        temp_min,\r\n        description,\r\n        lat,\r\n        lon,\r\n        icon,\r\n        pressure,\r\n        humidity,\r\n        \r\n        loadWeather\r\n    }) => {\r\n        return (\r\n            <>\r\n                <div >  \r\n                    { city && country ? <span><h2>{ city }, { country }</h2></span> : null } \r\n                     {lat && lon ?<span><h3>Lat: {lat}&deg;, Lon: {lon}&deg;</h3></span> : null}\r\n                    <div className='container'> \r\n                  \r\n                        <div className='card'>\r\n                        { temp ? <span><h3>Temperature</h3><br /><h3>{ Math.floor(temp) }&deg;</h3></span> : null }\r\n                         { temp_min && temp_max \r\n                                                    ? <span><h3>{ Math.ceil(temp_min) }&deg;- { Math.ceil(temp_max) }&deg;</h3>\r\n                                                    </span>\r\n                                                    : null \r\n                                                }\r\n                        {icon ?<span><img src={`http://openweathermap.org/img/w/${icon}.png`}  alt='meme'></img></span> : null}\r\n\r\n                         <span><h3>{ description }</h3></span>\r\n                        </div>\r\n                        <div className='card'>\r\n                            {pressure ? <span><h3>Pressure</h3><br /><h3>{pressure}&deg;</h3></span> : null}\r\n                          \r\n                      \r\n                        </div>\r\n                        <div className='card'>\r\n                              {humidity ? <span><h3>humidity</h3><br /><h3>{humidity}</h3></span> : null}\r\n                      \r\n                        </div>  \r\n\r\n                    </div>\r\n                   \r\n                   \r\n                </div>\r\n            </>\r\n        );\r\n}\r\n\r\nexport default Weather;","  \r\nimport React from \"react\";\r\n\r\n\r\nconst Form = ({ loadWeather }) => (\r\n    <>\r\n        <form  onSubmit={loadWeather}>\r\n            <input type=\"text\" name=\"city\" placeholder=\"Enter city\"/>\r\n            <input type=\"text\" name=\"country\" placeholder=\"Enter country\" /><br />\r\n            <span ><button type=\"submit\" value=\"search\">Get Weather</button></span>\r\n        </form>\r\n    </>\r\n)\r\n\r\nexport default Form;\r\n\r\n\r\n","import React, {useState} from 'react';\r\nimport axios from \"axios\";\r\nimport Weather from './weather';\r\nimport Form from './forms';\r\nimport './form.css'\r\nconst api_key = \"1457b5f7f9dd52eb99023f987eca1c3f\";\r\n\r\n\r\n\r\nconst User = () =>{\r\n    \r\n    \r\n    const [city, setCity] = useState(\"\");\r\n    const [country, setCountry] = useState(\"\");\r\n    // const [icon, setIcon] = useState();\r\n    const [description, setDescription] = useState(\"\");\r\n    const [temp_min, setTemp_min] = useState(\"\");\r\n    const [temp_max, setTemp_max] = useState(\"\");\r\n    const [temp, setTemp] = useState(\"\");\r\n    const [lat, setLat] = useState(\"\");\r\n    const [lon, setLon] = useState(\"\");\r\n    const [icon, setIcon]= useState(\"\");\r\n    const [ pressure, setPressure] = useState(\"\");\r\n    const [ humidity, setHumidity] = useState(\"\")\r\n  \r\n\r\n\r\n    const getWeather = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const city = e.target.elements.city.value;\r\n        const country = e.target.elements.country.value;\r\n        // console.log(\"got here\")\r\n        if (city && country) {\r\n            const api_call = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${api_key}`);\r\n            const response = await api_call;\r\n            // console.log(response);\r\n            // return response;\r\n            setCity(response.data.name)\r\n            setCountry(response.data.sys.country);\r\n            setTemp(response.data.main.temp);\r\n            setPressure(response.data.main.pressure);\r\n            setHumidity(response.data.main.humidity);\r\n            setTemp_max(response.data.main.temp_max);\r\n            setTemp_min(response.data.main.temp_min);\r\n            setDescription(response.data.weather[0].description);\r\n            setIcon(response.data.weather[0].icon);\r\n            setLat(response.data.coord.lat);\r\n            setLon(response.data.coord.lon);\r\n            console.log(response);\r\n\r\n        }\r\n    }\r\n    \r\n\r\n    \r\n    return(\r\n        <div >    \r\n                <Form loadWeather={getWeather} />\r\n               <Weather \r\n                city = {city} \r\n                country = {country} \r\n                temp = {temp} \r\n                temp_max = {temp_max}\r\n                temp_min = {temp_min}\r\n                description = {description}\r\n                lat = {lat}\r\n                lon = {lon}\r\n                icon = {icon}\r\n                pressure = {pressure}\r\n                humidity = {humidity}\r\n              \r\n            />\r\n           \r\n        </div>\r\n    )\r\n}\r\nexport default User;","import React from 'react';\r\n \r\nconst home = () => {\r\n    return (\r\n       <div>\r\n          <h1>Home</h1>\r\n           <p>Home page body content</p>\r\n       </div>\r\n    );\r\n}\r\n \r\nexport default home;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './app.css'\nimport Menu from './menu';\nimport Form from './form';\nimport User from './user';\nimport Home from './home';\n\n\nfunction App() {\n  \n  return (\n    <Router basename={window.location.pathname || ''}>\n       <div>\n        \n        <Menu />\n        <Switch>\n          <Route path=\"/form\" Component={Form}>\n            <Form />\n          </Route>\n          <Route path=\"/user\" exact Component={User}>\n            <User/>\n          </Route>\n          <Route path=\"/\" exact Component={Home}>\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}